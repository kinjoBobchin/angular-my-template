/*
Document
1. Change from `box-sizing: content-box` so that `width` is not affected by `padding` or `border`.
2. Change the default font family in all browsers.
3. Correct the line height in all browsers.
4. Prevent adjustments of font size after orientation changes in IE on Windows Phone and in iOS.
5. Setting @viewport causes scrollbars to overlap content in IE11 and Edge, so we force a non-overlapping, non-auto-hiding scrollbar to counteract.
6. Change the default tap highlight to be completely transparent in iOS.
*/
*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
  font-family: sans-serif;
  line-height: 1.15;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -ms-overflow-style: scrollbar;
  -webkit-tap-highlight-color: transparent;
}

/* IE10+ doesn't honor `<meta name="viewport">` in some cases. */
@-ms-viewport {
  width: device-width;
}

/* Shim for "new" HTML5 structural elements to display correctly (IE10, older browsers) */
article,
aside,
dialog,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section {
  display: block;
}

/*
Body
1. Remove the margin in all browsers.
2. As a best practice, apply a default `background-color`.
3. Set an explicit initial text-align value so that we can later use the
   the `inherit` value on things like `<th>` elements.
*/
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,
    'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',
    'Segoe UI Symbol';
  font-size: 1rem;
  font-weight: normal;
  line-height: 1.5;
  color: #212529;
  text-align: left;
  background-color: #fff;
}

/*
Suppress the focus outline on elements that cannot be accessed via keyboard.
This prevents an unwanted focus outline from appearing around elements that
might still respond to pointer events.
Credit: https://github.com/suitcss/base
*/
[tabindex='-1']:focus {
  outline: none !important;
}

/*
Typography
Remove top margins from headings
By default, `<h1>`-`<h6>` all receive top and bottom margins. We nuke the top
margin for easier control within type scales as it avoids margin collapsing.
*/
h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 0;
  margin-bottom: 0.5rem;
}

/*
Reset margins on paragraphs
Similarly, the top margin on `<p>`s get reset. However, we also reset the
bottom margin to use `rem` units instead of `em`.
*/
p {
  margin-top: 0;
  margin-bottom: 1rem;
}

address {
  margin-bottom: 1rem;
  font-style: normal;
  line-height: inherit;
}

ol,
ul,
dl {
  margin-top: 0;
  margin-bottom: 1rem;
}

ol ol,
ul ul,
ol ul,
ul ol {
  margin-bottom: 0;
}

blockquote {
  margin: 0 0 1rem;
}

b,
strong {
  font-weight: bolder;
}

small {
  font-size: 80%;
}

/* Links */
a {
  color: #007bff;
  text-decoration: none;
  background-color: transparent;
  -webkit-text-decoration-skip: objects;
}

a:hover {
  color: #0056b3;
  text-decoration: underline;
}

/*
And undo these styles for placeholder links/named anchors (without href)
which have not been made explicitly keyboard-focusable (without tabindex).
It would be more straightforward to just use a[href] in previous block, but that
causes specificity issues in many other styles that are too complex to fix.
See https://github.com/twbs/bootstrap/issues/19402
*/
a:not([href]):not([tabindex]) {
  color: inherit;
  text-decoration: none;
}

a:not([href]):not([tabindex]):focus,
a:not([href]):not([tabindex]):hover {
  color: inherit;
  text-decoration: none;
}

a:not([href]):not([tabindex]):focus {
  outline: 0;
}

/* Code */
pre,
code,
kbd,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

pre {
  margin-top: 0;
  margin-bottom: 1rem;
  overflow: auto;
}

/* Images and content */
img {
  vertical-align: middle;
  border-style: none;
}

svg:not(:root) {
  overflow: hidden;
}

/*
Avoid 300ms click delay on touch devices that support the `touch-action` CSS property.
In particular, unlike most other browsers, IE11+Edge on Windows 10 on touch devices and IE Mobile 10-11
DON'T remove the click delay when `<meta name="viewport" content="width=device-width">` is present.
However, they DO support removing the click delay via `touch-action: manipulation`.
See:
* https://getbootstrap.com/docs/4.0/content/reboot/#click-delay-optimization-for-touch
* http://caniuse.com/#feat=css-touch-action
* https://patrickhlauke.github.io/touch/tests/results/#suppressing-300ms-delay
*/
a,
area,
button,
[role='button'],
input:not([type='range']),
label,
select,
summary,
textarea {
  -ms-touch-action: manipulation;
  touch-action: manipulation;
}

/* Tables */
table {
  border-collapse: collapse;
}

caption {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  color: #868e96;
  text-align: left;
  caption-side: bottom;
}

th {
  text-align: inherit;
}

/* Forms */
label {
  /* Allow labels to use `margin` for spacing. */
  display: inline-block;
  margin-bottom: 0.5rem;
}

/* Work around a Firefox/IE bug where the transparent `button` background
results in a loss of the default `button` focus styles.
Credit: https://github.com/suitcss/base/ */
button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

input,
button,
select,
optgroup,
textarea {
  margin: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

button,
input {
  overflow: visible;
}

button,
select {
  text-transform: none;
}

/*
1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
   controls in Android 4.
2. Correct the inability to style clickable types in iOS and Safari.
*/
button,
html [type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
}

/* Remove inner border and padding from Firefox, but don't restore the outline like Normalize. */
button::-moz-focus-inner,
[type='button']::-moz-focus-inner,
[type='reset']::-moz-focus-inner,
[type='submit']::-moz-focus-inner {
  padding: 0;
  border-style: none;
}

input[type='radio'],
input[type='checkbox'] {
  box-sizing: border-box; /* 1. Add the correct box sizing in IE 10- */
  padding: 0; /* 2. Remove the padding in IE 10- */
}

/*
Remove the default appearance of temporal inputs to avoid a Mobile Safari
bug where setting a custom line-height prevents text from being vertically
centered within the input.
See https://bugs.webkit.org/show_bug.cgi?id=139848
and https://github.com/twbs/bootstrap/issues/11266
*/
input[type='date'],
input[type='time'],
input[type='datetime-local'],
input[type='month'] {
  -webkit-appearance: listbox;
}

textarea {
  /* Remove the default vertical scrollbar in IE. */
  overflow: auto;
  /* Textareas should really only resize vertically so they don't break their (horizontal) containers. */
  resize: vertical;
}

fieldset {
  /*
  Browsers set a default `min-width: min-content;` on fieldsets,
  unlike e.g. `<div>`s, which have `min-width: 0;` by default.
  So we reset that to ensure fieldsets behave more like a standard block element.
  See https://github.com/twbs/bootstrap/issues/12359
  and https://html.spec.whatwg.org/multipage/#the-fieldset-and-legend-elements
  */
  min-width: 0;
  /* Reset the default outline behavior of fieldsets so they don't affect page layout. */
  padding: 0;
  margin: 0;
  border: 0;
}

/* 1. Correct the text wrapping in Edge and IE. */
/* 2. Correct the color inheritance from `fieldset` elements in IE. */
legend {
  display: block;
  width: 100%;
  max-width: 100%;
  padding: 0;
  margin-bottom: 0.5rem;
  font-size: 1.5rem;
  line-height: inherit;
  color: inherit;
  white-space: normal;
}

progress {
  /* Add the correct vertical alignment in Chrome, Firefox, and Opera. */
  vertical-align: baseline;
}

/* Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type='number']::-webkit-inner-spin-button,
[type='number']::-webkit-outer-spin-button {
  height: auto;
}

[type='search'] {
  /*
  This overrides the extra rounded corners on search inputs in iOS so you can properly style them.
  */
  outline-offset: -2px;
  -webkit-appearance: none;
}

/* Remove the inner padding and cancel buttons in Chrome and Safari on macOS. */
[type='search']::-webkit-search-cancel-button,
[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/
::-webkit-file-upload-button {
  font: inherit;
  -webkit-appearance: button;
}

/* Correct element displays */
output {
  display: inline-block;
}

summary {
  /* Add the correct display in all browsers */
  display: list-item;
}

template {
  /* Add the correct display in IE */
  display: none;
}

/* Always hide an element with the `hidden` HTML attribute */
[hidden] {
  display: none !important;
}
